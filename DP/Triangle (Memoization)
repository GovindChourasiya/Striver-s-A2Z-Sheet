class Solution {
    public int solve(List<List<Integer>> triangle, int row, int col, int[][] dp){
        int n = triangle.size();

        if(row == n-1){
            return triangle.get(row).get(col);
        }

        if(dp[row][col] != -1){
            return dp[row][col];
        }

        int down = triangle.get(row).get(col) + solve(triangle,row+1,col,dp);
        int right = triangle.get(row).get(col) + solve(triangle,row+1,col+1,dp);

        return dp[row][col] = Math.min(down,right);
        
    }
    public int minimumTotal(List<List<Integer>> triangle) {
        int n = triangle.size();
        int[][] dp = new int[n+1][n+1];
        for(int[] arr : dp){
            Arrays.fill(arr,-1);
        }
        return solve(triangle,0,0,dp);
    }
}
