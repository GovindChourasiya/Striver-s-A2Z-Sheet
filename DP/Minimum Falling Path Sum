class Solution {
    public int minFallingPathSum(int[][] matrix) {
        int n = matrix.length;

        int[][] dp = new int[n][n];

        for(int i=0;i<matrix[0].length;i++){
            dp[n-1][i] = matrix[n-1][i];
        }

        for(int i=n-2;i>=0;i--){
            for(int j=0;j<n;j++){
                int down = dp[i+1][j];
                int left = (j > 0) ? dp[i+1][j-1] : Integer.MAX_VALUE;
                int right = (j < n-1) ? dp[i+1][j+1] : Integer.MAX_VALUE;

                dp[i][j] = matrix[i][j] + Math.min(down, Math.min(left, right));

            }
        }

        int res = Integer.MAX_VALUE;
        for(int i=0;i<n;i++){
            res = Math.min(res,dp[0][i]);
        }

        return res;
    }
}
