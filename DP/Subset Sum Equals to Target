class Solution {
    static Boolean solve(int arr[], int target, int idx, int[][] dp){
        if(target == 0) return true;
        if(idx == 0){
            return (arr[idx] == target);
        }
        
        if(dp[idx][target] != -1){
            return dp[idx][target] == 1;
        }
        
        // not take 
        boolean notTake = solve(arr,target,idx-1,dp);
        boolean take = false;
        
        if(arr[idx] <= target){
            take = solve(arr,target-arr[idx],idx-1,dp);
        }
        boolean result = (notTake || take);
        dp[idx][target] = result ? 1 : 0;
        return result;
    }

    static Boolean isSubsetSum(int arr[], int target) {
        // code here
        int n = arr.length;
        int[][] dp = new int[n][target+1];
        for(int[] arrs : dp){
            Arrays.fill(arrs,-1);
        }
        return solve(arr,target,n-1,dp);
    }
}
